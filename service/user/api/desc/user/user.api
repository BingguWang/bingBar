syntax = "v1"

info(
    title: "用户实例"
    desc: "用户实例"
)

type User {
    Id int64 `json:"id"`
    Mobile string `json:"mobile"`
    Nickname string `json:"nickname"`
    Sex int64 `json:"sex"`
    Avatar string `json:"avatar"`
    Info string `json:"info"`
    Location string `json:"location"`
}

type (
    RegisterReq {
        Mobile string `json:"mobile"`
        Password string `json:"password"`
    }
    RegisterResp {
        AccessToken string `json:"accessToken"`
        AccessExpire int64 `json:"accessExpire"`
        RefreshAfter int64 `json:"refreshAfter"`
    }
)

type (
    LoginReq {
        Mobile string `json:"mobile"`
        Password string `json:"password"`
    }
    LoginResp {
        AccessToken string `json:"accessToken"`
        AccessExpire int64 `json:"accessExpire"`
        RefreshAfter int64 `json:"refreshAfter"`
    }
)
type (
    FollowReq {
        Uid int64 `json:"uid"`
    }
    FollowResp {
        RetMsg string `json:"retMsg"`
    }
)
type (
    UnFollowReq {
        Uid int64 `json:"uid"`
    }
    UnFollowResp {
        RetMsg string `json:"retMsg"`
    }
)
type (
    GetFollowListReq {
        PageNo int64 `json:"pageNo"`
        PageSize int64 `json:"pageSize"`
    }
    GetFollowListResp {
        RetMsg string `json:"retMsg"`
        UserList []User `json:"userList"`
    }
)

type (
    GetFansListReq {
        PageNo int64 `json:"pageNo"`
        PageSize int64 `json:"pageSize"`
    }
    GetFansListResp {
        RetMsg string `json:"retMsg"`
        UserList []User `json:"userList"`
    }
)

type (
    GetFriendListReq {
        PageNo int64 `json:"pageNo"`
        PageSize int64 `json:"pageSize"`
    }
    GetFriendListResp {
        RetMsg string `json:"retMsg"`
        UserList []User `json:"userList"`
    }
)

type (
    GetMutualFollowListReq {
        Followed int64 `json:"followed"`
        PageSize int64 `json:"pageSize"`
    }
    GetMutualFollowListResp {
        RetMsg string `json:"retMsg"`
        UserList []User `json:"userList"`
        Total int64 `json:"total"`
    }
)

type (
    GetMutualFriendListReq {
        Uid int64 `json:"uid"`
        PageSize int64 `json:"pageSize"`
    }
    GetMutualFriendListResp {
        RetMsg string `json:"retMsg"`
        UserList []User `json:"userList"`
        Total int64 `json:"total"`
    }
)

// =============================== 用户操作 ====================================
type (
    EditUserReq {
        Nickname string `json:"nickname"`
        Sex int64 `json:"sex"`
        Avatar string `json:"avatar"`
        Info string `json:"info"`
        Location string `json:"location"`
    }
    EditUserResp {
        RetMsg string `json:"retMsg"`
    }
)

type (
    UserInfoReq {
    }
    UserInfoResp {
        UserInfo User `json:"userInfo"`
    }
)


type (
    FansHistoryReq {
        Start int64 `json:"start"`
        End int64 `json:"end"`
    }
    FansHistoryResp {
        HistoryItems []HistoryItem `json:"historyItem"`
    }
)
type HistoryItem {
    Value int64 `json:"value"`
    TimeAt int64 `json:"timeAt"`
}

type (
    SummaryFansReq {
    }
    SummaryFansResp {
        SummaryItems []SummaryFansItem `json:"historyItem"`
    }
)
type SummaryFansItem {
    Percentile string `json:"percentile"`
    Value float64 `json:"value"`
}

type (
    HistogramFansReq {
    }
    HistogramFansResp {
        HistogramFansItems []HistogramFansItem `json:"histogramFansItems"`
    }
)
type HistogramFansItem {
    Le string `json:"le"`
    Value float64 `json:"value"`
}